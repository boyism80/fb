// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_INTERNAL_FB_PROTOCOL_INTERNAL_ORIGIN_H_
#define FLATBUFFERS_GENERATED_INTERNAL_FB_PROTOCOL_INTERNAL_ORIGIN_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace fb {
namespace protocol {
namespace internal {
namespace origin {

enum Service : int8_t {
  Service_Gateway = 0,
  Service_Login = 1,
  Service_Game = 2,
  Service_MIN = Service_Gateway,
  Service_MAX = Service_Game
};

inline const Service (&EnumValuesService())[3] {
  static const Service values[] = {
    Service_Gateway,
    Service_Login,
    Service_Game
  };
  return values;
}

inline const char * const *EnumNamesService() {
  static const char * const names[4] = {
    "Gateway",
    "Login",
    "Game",
    nullptr
  };
  return names;
}

inline const char *EnumNameService(Service e) {
  if (::flatbuffers::IsOutRange(e, Service_Gateway, Service_Game)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesService()[index];
}

}  // namespace origin
}  // namespace internal
}  // namespace protocol
}  // namespace fb

#endif  // FLATBUFFERS_GENERATED_INTERNAL_FB_PROTOCOL_INTERNAL_ORIGIN_H_
