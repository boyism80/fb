// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.raw
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Spell : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Spell GetRootAsSpell(ByteBuffer _bb) { return GetRootAsSpell(_bb, new Spell()); }
  public static Spell GetRootAsSpell(ByteBuffer _bb, Spell obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifySpell(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, SpellVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Spell __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint User { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte Slot { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint Id { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<fb.protocol.db.raw.Spell> CreateSpell(FlatBufferBuilder builder,
      uint user = 0,
      byte slot = 0,
      uint id = 0) {
    builder.StartTable(3);
    Spell.AddId(builder, id);
    Spell.AddUser(builder, user);
    Spell.AddSlot(builder, slot);
    return Spell.EndSpell(builder);
  }

  public static void StartSpell(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUser(FlatBufferBuilder builder, uint user) { builder.AddUint(0, user, 0); }
  public static void AddSlot(FlatBufferBuilder builder, byte slot) { builder.AddByte(1, slot, 0); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(2, id, 0); }
  public static Offset<fb.protocol.db.raw.Spell> EndSpell(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.raw.Spell>(o);
  }
  public static void FinishSpellBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.raw.Spell> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSpellBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.raw.Spell> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class SpellVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*User*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Slot*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Id*/, 4 /*uint*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
