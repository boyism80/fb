// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.flatbuffer.inter.request
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Transfer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Transfer GetRootAsTransfer(ByteBuffer _bb) { return GetRootAsTransfer(_bb, new Transfer()); }
  public static Transfer GetRootAsTransfer(ByteBuffer _bb, Transfer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyTransfer(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, TransferVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Transfer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public fb.protocol.flatbuffer.inter.request.Service From { get { int o = __p.__offset(6); return o != 0 ? (fb.protocol.flatbuffer.inter.request.Service)__p.bb.GetSbyte(o + __p.bb_pos) : fb.protocol.flatbuffer.inter.request.Service.Gateway; } }
  public fb.protocol.flatbuffer.inter.request.Service To { get { int o = __p.__offset(8); return o != 0 ? (fb.protocol.flatbuffer.inter.request.Service)__p.bb.GetSbyte(o + __p.bb_pos) : fb.protocol.flatbuffer.inter.request.Service.Gateway; } }
  public ushort Map { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort X { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Y { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public uint Fd { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<fb.protocol.flatbuffer.inter.request.Transfer> CreateTransfer(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      fb.protocol.flatbuffer.inter.request.Service from = fb.protocol.flatbuffer.inter.request.Service.Gateway,
      fb.protocol.flatbuffer.inter.request.Service to = fb.protocol.flatbuffer.inter.request.Service.Gateway,
      ushort map = 0,
      ushort x = 0,
      ushort y = 0,
      uint fd = 0) {
    builder.StartTable(7);
    Transfer.AddFd(builder, fd);
    Transfer.AddName(builder, nameOffset);
    Transfer.AddY(builder, y);
    Transfer.AddX(builder, x);
    Transfer.AddMap(builder, map);
    Transfer.AddTo(builder, to);
    Transfer.AddFrom(builder, from);
    return Transfer.EndTransfer(builder);
  }

  public static void StartTransfer(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddFrom(FlatBufferBuilder builder, fb.protocol.flatbuffer.inter.request.Service from) { builder.AddSbyte(1, (sbyte)from, 0); }
  public static void AddTo(FlatBufferBuilder builder, fb.protocol.flatbuffer.inter.request.Service to) { builder.AddSbyte(2, (sbyte)to, 0); }
  public static void AddMap(FlatBufferBuilder builder, ushort map) { builder.AddUshort(3, map, 0); }
  public static void AddX(FlatBufferBuilder builder, ushort x) { builder.AddUshort(4, x, 0); }
  public static void AddY(FlatBufferBuilder builder, ushort y) { builder.AddUshort(5, y, 0); }
  public static void AddFd(FlatBufferBuilder builder, uint fd) { builder.AddUint(6, fd, 0); }
  public static Offset<fb.protocol.flatbuffer.inter.request.Transfer> EndTransfer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.flatbuffer.inter.request.Transfer>(o);
  }
  public static void FinishTransferBuffer(FlatBufferBuilder builder, Offset<fb.protocol.flatbuffer.inter.request.Transfer> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedTransferBuffer(FlatBufferBuilder builder, Offset<fb.protocol.flatbuffer.inter.request.Transfer> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class TransferVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyField(tablePos, 6 /*From*/, 1 /*fb.protocol.flatbuffer.inter.request.Service*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*To*/, 1 /*fb.protocol.flatbuffer.inter.request.Service*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*Map*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*X*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Y*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 16 /*Fd*/, 4 /*uint*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
