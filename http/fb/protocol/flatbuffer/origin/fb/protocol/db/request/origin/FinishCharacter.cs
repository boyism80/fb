// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.request.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FinishCharacter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static FinishCharacter GetRootAsFinishCharacter(ByteBuffer _bb) { return GetRootAsFinishCharacter(_bb, new FinishCharacter()); }
  public static FinishCharacter GetRootAsFinishCharacter(ByteBuffer _bb, FinishCharacter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyFinishCharacter(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, FinishCharacterVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FinishCharacter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Pk { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte Hair { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Sex { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Nation { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Creature { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<fb.protocol.db.request.origin.FinishCharacter> CreateFinishCharacter(FlatBufferBuilder builder,
      uint pk = 0,
      byte hair = 0,
      byte sex = 0,
      byte nation = 0,
      byte creature = 0) {
    builder.StartTable(5);
    FinishCharacter.AddPk(builder, pk);
    FinishCharacter.AddCreature(builder, creature);
    FinishCharacter.AddNation(builder, nation);
    FinishCharacter.AddSex(builder, sex);
    FinishCharacter.AddHair(builder, hair);
    return FinishCharacter.EndFinishCharacter(builder);
  }

  public static void StartFinishCharacter(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddPk(FlatBufferBuilder builder, uint pk) { builder.AddUint(0, pk, 0); }
  public static void AddHair(FlatBufferBuilder builder, byte hair) { builder.AddByte(1, hair, 0); }
  public static void AddSex(FlatBufferBuilder builder, byte sex) { builder.AddByte(2, sex, 0); }
  public static void AddNation(FlatBufferBuilder builder, byte nation) { builder.AddByte(3, nation, 0); }
  public static void AddCreature(FlatBufferBuilder builder, byte creature) { builder.AddByte(4, creature, 0); }
  public static Offset<fb.protocol.db.request.origin.FinishCharacter> EndFinishCharacter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.request.origin.FinishCharacter>(o);
  }
  public static void FinishFinishCharacterBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.request.origin.FinishCharacter> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedFinishCharacterBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.request.origin.FinishCharacter> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class FinishCharacterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Pk*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Hair*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Sex*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*Nation*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*Creature*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
