// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.request.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Ping : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Ping GetRootAsPing(ByteBuffer _bb) { return GetRootAsPing(_bb, new Ping()); }
  public static Ping GetRootAsPing(ByteBuffer _bb, Ping obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyPing(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, PingVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Ping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartPing(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<fb.protocol.db.request.origin.Ping> EndPing(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.request.origin.Ping>(o);
  }
  public static void FinishPingBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.request.origin.Ping> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPingBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.request.origin.Ping> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class PingVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
