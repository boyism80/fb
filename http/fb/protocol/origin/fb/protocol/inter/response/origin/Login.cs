// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.inter.response.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Login GetRootAsLogin(ByteBuffer _bb) { return GetRootAsLogin(_bb, new Login()); }
  public static Login GetRootAsLogin(ByteBuffer _bb, Login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyLogin(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, LoginVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Success { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Logon { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Ip { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIpBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIpBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIpArray() { return __p.__vector_as_array<byte>(8); }
  public ushort Port { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<fb.protocol.inter.response.origin.Login> CreateLogin(FlatBufferBuilder builder,
      bool success = false,
      bool logon = false,
      StringOffset ipOffset = default(StringOffset),
      ushort port = 0) {
    builder.StartTable(4);
    Login.AddIp(builder, ipOffset);
    Login.AddPort(builder, port);
    Login.AddLogon(builder, logon);
    Login.AddSuccess(builder, success);
    return Login.EndLogin(builder);
  }

  public static void StartLogin(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(0, success, false); }
  public static void AddLogon(FlatBufferBuilder builder, bool logon) { builder.AddBool(1, logon, false); }
  public static void AddIp(FlatBufferBuilder builder, StringOffset ipOffset) { builder.AddOffset(2, ipOffset.Value, 0); }
  public static void AddPort(FlatBufferBuilder builder, ushort port) { builder.AddUshort(3, port, 0); }
  public static Offset<fb.protocol.inter.response.origin.Login> EndLogin(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.inter.response.origin.Login>(o);
  }
  public static void FinishLoginBuffer(FlatBufferBuilder builder, Offset<fb.protocol.inter.response.origin.Login> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedLoginBuffer(FlatBufferBuilder builder, Offset<fb.protocol.inter.response.origin.Login> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class LoginVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Success*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Logon*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 8 /*Ip*/, false)
      && verifier.VerifyField(tablePos, 10 /*Port*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
