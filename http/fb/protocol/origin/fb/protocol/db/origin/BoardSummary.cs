// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BoardSummary : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static BoardSummary GetRootAsBoardSummary(ByteBuffer _bb) { return GetRootAsBoardSummary(_bb, new BoardSummary()); }
  public static BoardSummary GetRootAsBoardSummary(ByteBuffer _bb, BoardSummary obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BoardSummary __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string User { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUserBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUserArray() { return __p.__vector_as_array<byte>(6); }
  public string CreatedDate { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedDateBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetCreatedDateBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCreatedDateArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<fb.protocol.db.origin.BoardSummary> CreateBoardSummary(FlatBufferBuilder builder,
      uint uid = 0,
      StringOffset userOffset = default(StringOffset),
      StringOffset created_dateOffset = default(StringOffset)) {
    builder.StartTable(3);
    BoardSummary.AddCreatedDate(builder, created_dateOffset);
    BoardSummary.AddUser(builder, userOffset);
    BoardSummary.AddUid(builder, uid);
    return BoardSummary.EndBoardSummary(builder);
  }

  public static void StartBoardSummary(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUid(FlatBufferBuilder builder, uint uid) { builder.AddUint(0, uid, 0); }
  public static void AddUser(FlatBufferBuilder builder, StringOffset userOffset) { builder.AddOffset(1, userOffset.Value, 0); }
  public static void AddCreatedDate(FlatBufferBuilder builder, StringOffset createdDateOffset) { builder.AddOffset(2, createdDateOffset.Value, 0); }
  public static Offset<fb.protocol.db.origin.BoardSummary> EndBoardSummary(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.origin.BoardSummary>(o);
  }
}


static public class BoardSummaryVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Uid*/, 4 /*uint*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*User*/, false)
      && verifier.VerifyString(tablePos, 8 /*CreatedDate*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
