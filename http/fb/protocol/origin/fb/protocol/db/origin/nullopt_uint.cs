// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct nullopt_uint : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static nullopt_uint GetRootAsnullopt_uint(ByteBuffer _bb) { return GetRootAsnullopt_uint(_bb, new nullopt_uint()); }
  public static nullopt_uint GetRootAsnullopt_uint(ByteBuffer _bb, nullopt_uint obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public nullopt_uint __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool Empty { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<fb.protocol.db.origin.nullopt_uint> Createnullopt_uint(FlatBufferBuilder builder,
      uint value = 0,
      bool empty = false) {
    builder.StartTable(2);
    nullopt_uint.AddValue(builder, value);
    nullopt_uint.AddEmpty(builder, empty);
    return nullopt_uint.Endnullopt_uint(builder);
  }

  public static void Startnullopt_uint(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddValue(FlatBufferBuilder builder, uint value) { builder.AddUint(0, value, 0); }
  public static void AddEmpty(FlatBufferBuilder builder, bool empty) { builder.AddBool(1, empty, false); }
  public static Offset<fb.protocol.db.origin.nullopt_uint> Endnullopt_uint(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.origin.nullopt_uint>(o);
  }
}


static public class nullopt_uintVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Value*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Empty*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
