// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.protocol.db.response.origin
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct WriteArticle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static WriteArticle GetRootAsWriteArticle(ByteBuffer _bb) { return GetRootAsWriteArticle(_bb, new WriteArticle()); }
  public static WriteArticle GetRootAsWriteArticle(ByteBuffer _bb, WriteArticle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyWriteArticle(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, WriteArticleVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public WriteArticle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Success { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<fb.protocol.db.response.origin.WriteArticle> CreateWriteArticle(FlatBufferBuilder builder,
      bool success = false) {
    builder.StartTable(1);
    WriteArticle.AddSuccess(builder, success);
    return WriteArticle.EndWriteArticle(builder);
  }

  public static void StartWriteArticle(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(0, success, false); }
  public static Offset<fb.protocol.db.response.origin.WriteArticle> EndWriteArticle(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.protocol.db.response.origin.WriteArticle>(o);
  }
  public static void FinishWriteArticleBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.response.origin.WriteArticle> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedWriteArticleBuffer(FlatBufferBuilder builder, Offset<fb.protocol.db.response.origin.WriteArticle> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class WriteArticleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Success*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
