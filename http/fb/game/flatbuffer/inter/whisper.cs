// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fb.game.flatbuffer.inter
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Whisper : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Whisper GetRootAsWhisper(ByteBuffer _bb) { return GetRootAsWhisper(_bb, new Whisper()); }
  public static Whisper GetRootAsWhisper(ByteBuffer _bb, Whisper obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyWhisper(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, WhisperVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Whisper __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Message { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<fb.game.flatbuffer.inter.Whisper> CreateWhisper(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(2);
    Whisper.AddMessage(builder, messageOffset);
    Whisper.AddName(builder, nameOffset);
    return Whisper.EndWhisper(builder);
  }

  public static void StartWhisper(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(1, messageOffset.Value, 0); }
  public static Offset<fb.game.flatbuffer.inter.Whisper> EndWhisper(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fb.game.flatbuffer.inter.Whisper>(o);
  }
  public static void FinishWhisperBuffer(FlatBufferBuilder builder, Offset<fb.game.flatbuffer.inter.Whisper> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedWhisperBuffer(FlatBufferBuilder builder, Offset<fb.game.flatbuffer.inter.Whisper> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class WhisperVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyString(tablePos, 6 /*Message*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
